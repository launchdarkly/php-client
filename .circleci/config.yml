version: 2.1

workflows:
  workflow:
    jobs:
      - test_5_5:
          name: PHP 5.5
      - test-with-preinstalled-php:
          name: PHP 5.6
          docker-image: circleci/php:5.6.34-cli-jessie
          use-phpredis: false
      - test-with-preinstalled-php:
          name: PHP 7.0
          docker-image: circleci/php:7.0.28-cli-jessie
      - test-with-preinstalled-php:
          name: PHP 7.1
          docker-image: circleci/php:7.1.15-cli-jessie
      - test-with-preinstalled-php:
          name: PHP 7.2
          docker-image: circleci/php:7.2.3-cli-stretch
          include-lowest-compatible-versions-test: false 
          # lowest "compatible" version of phpunit in 7.2 has a bug - https://github.com/sebastianbergmann/comparator/pull/30
      - test-with-preinstalled-php:
          name: PHP 7.3
          docker-image: circleci/php:7.3.9-cli-stretch
      - test-with-preinstalled-php:
          name: PHP 7.4
          docker-image: circleci/php:7.4.1-cli-buster
      - integration-test

jobs:
  test-with-preinstalled-php:
    parameters:
      docker-image:
        type: string
      use-phpredis:
        type: boolean
        default: true
      include-lowest-compatible-versions-test:
        type: boolean
        default: true

    docker:
      - image: <<parameters.docker-image>>
      - image: amazon/dynamodb-local
      - image: consul
      - image: redis

    steps:
      - checkout
      - run:
          name: validate composer.json
          command: composer validate
      - run:
          name: install dependencies
          command: composer install --no-progress
      - when:
          condition: <<parameters.use-phpredis>>
          steps:
            - run:
                name: setup phpredis
                command: |
                  pecl config-set php_ini /usr/local/etc/php/php.ini
                  yes '' | sudo pecl install -f redis || true;
                  echo "extension=redis.so" | sudo tee -a /usr/local/etc/php/conf.d/redis.ini;
      - run:
          name: run tests with highest compatible dependency versions
          command: vendor/bin/phpunit --log-junit ~/phpunit/junit.xml --coverage-text tests
      - store_test_results:
          path: ~/phpunit
      - store_artifacts:
          path: ~/phpunit
      - when:
          condition: <<parameters.include-lowest-compatible-versions-test>>
          steps:
            - run:
                name: run tests with lowest compatible dependency versions
                command: composer update --prefer-lowest --no-progress && vendor/bin/phpunit tests

  test_5_5: # CircleCI doesn't provide a Docker image for 5.5
    machine:
      image: circleci/classic:latest # Ubuntu 14.04
    steps:
      - run:
          name: install PHP and Composer
          command: |
            sudo apt-get update &&
            sudo apt-get install circleci-php-5.5.36 &&
            php -r "copy('https://getcomposer.org/installer', '/tmp/composer-setup.php');" &&
            sudo php /tmp/composer-setup.php --install-dir=/usr/local/bin --filename=composer
      - run:
          name: install Docker
          command: |
            sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" &&
            sudo apt-get -q update &&
            sudo apt-cache policy docker-ce &&
            sudo apt-get -qy install docker-ce
      - run: sudo apt-get -qy install redis-server curl
      - checkout
      - run:
          name: validate composer.json
          command: composer validate
      - run:
          name: install current dependencies
          command: composer install --no-progress
      - run:
          name: run php-cs-fixer
          command: vendor/bin/php-cs-fixer fix --diff --dry-run --verbose
      - run:
          name: start DynamoDB
          command: docker run -p 8000:8000 amazon/dynamodb-local
          background: true
      - run:
          name: download Consul
          command: wget https://releases.hashicorp.com/consul/0.8.0/consul_0.8.0_linux_amd64.zip
      - run:
          name: extract Consul
          command: unzip consul_0.8.0_linux_amd64.zip
      - run:
          name: start Consul
          command: ./consul agent -dev
          background: true
      - run:
          name: wait on Consul
          command: |
            until $(curl --output /dev/null --silent --fail --request PUT --data 'test' http://localhost:8500/v1/kv/initchecker); do
                echo 'still waiting on Consul...'; sleep 2;
            done
          timeout: 50
      - run:
          name: run tests
          command: vendor/bin/phpunit --log-junit ~/phpunit/junit.xml --coverage-text tests
      - store_test_results:
          path: ~/phpunit
      - store_artifacts:
          path: ~/phpunit

  integration-test:
    docker:
      - image: circleci/php:5.6.34-cli-jessie
      - image: redis
    steps:
      - checkout
      - run:
          name: setup apcu
          command: |
            pecl config-set php_ini /usr/local/etc/php/php.ini
            yes '' | sudo pecl install -f apcu-4.0.10 || true;
            echo "extension=apcu.so" | sudo tee -a /usr/local/etc/php/conf.d/apcu.ini;
            echo "apc.enable_cli = 1" | sudo tee -a /usr/local/etc/php/conf.d/apcu.ini
      - run: composer update --no-progress
      - run: vendor/bin/phpunit --log-junit ~/phpunit/junit.xml integration-tests/CachedRedisFeatureRequesterTest.php
      - store_test_results:
          path: ~/phpunit
      - store_artifacts:
          path: ~/phpunit
